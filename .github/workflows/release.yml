name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'GitLab Tag'
        required: true
        default: ''

jobs:
  build-mac:
    name: Build macOS App
    runs-on: macos-latest
    needs: [build-android]

    steps:
      - name: Checkout GitHub repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16.7.0
          
      - name: Clone & Install Dependencies
        run: |
          git clone https://oauth2:${{ secrets.GITLAB_ACCESS_TOKEN }}@gitlab.com/yoongnan/dynamike-tools.git
          cd dynamike-tools
          npm cache clean --force
          npm ci --legacy-peer-deps
          
          
      - name: Build & Cleaning
        run: |
          cd dynamike-tools
          npm run build-prod
          npm run builder-mac -- --publish=never

          # Move output before cleanup
          mkdir -p ../release-mac
          mv release-output/*.dmg release-output/*.yml ../release-mac/

          # Clean up source code
          cd ..
          rm -rf dynamike-tools
          
      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-release
          path: release-mac/*
          
  build-win:
    name: Build Windows App
    runs-on: ubuntu-latest
    needs: [build-android]
    container:
      image: electronuserland/builder:wine  # Wine + Electron Builder for Windows build
      options: --env HOME=/home/user
    steps:
      - name: Checkout GitHub repository
        uses: actions/checkout@v3
        
      - name: Set up Python and build tools
        run: |
          apt-get update
          apt-get install -y python3 python3-pip python3-dev build-essential curl git

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 16.7.0
          
      - name: Clone & Install Dependencies
        run: |
          git clone https://oauth2:${{ secrets.GITLAB_ACCESS_TOKEN }}@gitlab.com/yoongnan/dynamike-tools.git
          cd dynamike-tools
          npm cache clean --force
          npm ci --legacy-peer-deps
          
      - name: Build & Cleaning
        run: |
          export HOME=/tmp
          cd dynamike-tools
          npm run build-prod
          npm run builder-win -- --publish=never

          # Move output before cleanup
          mkdir -p ../release-win
          # Rename installer for consistent formatting
          mv release-output/*.exe release-output/*.yml ../release-win/
          mv release-win/DynamikeApp Setup ${{ inputs.tag_name }}.exe release-win/DynamikeApp-Setup-${{ inputs.tag_name }}.exe

          # Clean up source code
          cd ..
          rm -rf dynamike-tools
        
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win-release
          path: release-win/*
          
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16.7.0

      - name: Set up Java (required by Android SDK)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: default
          arch: x86_64
          force-avd-creation: false
          script: echo "Android SDK is ready."

      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || true

      - name: Install other build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 python3-pip
          
      - name: Install Cordova
        run: npm install -g cordova
        
      - name: Clone & Install App Dependencies
        run: |
          git clone https://oauth2:${{ secrets.GITLAB_ACCESS_TOKEN }}@gitlab.com/yoongnan/dynamike-tools.git
          cd dynamike-tools
          npm cache clean --force
          npm ci --legacy-peer-deps

      - name: Build 
        run: |
          cd dynamike-tools
          npm run build-prod
          
      - name: Build Cordova App
        run: |
          cd dynamike-tools
          cordova platform add android@13.0.0
          
          npm run android-prod

          mkdir -p ../release-android
          mv /home/runner/work/dynamike-tools/dynamike-tools/dynamike-tools/platforms/android/app/build/outputs/bundle/release/*.aab ../release-android/com.dynamike.app.1.0.${{ inputs.tag_name }}.abb

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: release-android/*
          
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-mac, build-win, build-android]
    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: mac-release
          path: mac-release

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: win-release
          path: win-release
          
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release
          path: android-release


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag_name }}
          name: ${{ inputs.tag_name }}
          files: |
            dynamike-tools/android-release/*.aab
            dynamike-tools/mac-release/*.dmg
            dynamike-tools/mac-release/*.yml
            dynamike-tools/win-release/*.exe
            dynamike-tools/win-release/*.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
